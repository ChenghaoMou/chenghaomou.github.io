<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>Sleepless in Debugging</title>
      <link>https://sleepless-in-debugging.statichost.eu</link>
      <description>Last 10 notes on Sleepless in Debugging</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>01 Intro</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/Privacy-AI/01-Intro</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/Privacy-AI/01-Intro</guid>
    <description>Information Flow: a flow of bits from sender to receiver with some probability. Privacy VS. Transparency Leaky information flow: aka. privacy violation.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>03 Information Flow within Communities</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/Privacy-AI/03-Information-Flow-within-Communities</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/Privacy-AI/03-Information-Flow-within-Communities</guid>
    <description>Dilemmas AI progress originating from data growth or high quality dataset simply cannot exempt us from violating privacy; We need relative and representative data in all research so that it is applicable in real-life; Not just AI research that is data-hunger because all research collaborates with each other at some point Information Services A typical narrative about privacy: Lack of data sharing could lead to service lock-in; More privacy violation could happen because of data-sharing; But there is a difference regarding private data being transferred: Private data moving with the owner; This is the sharing we want Private data being sold with owner’s consent; This is not the sharing we want We need Interoperability (e.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>Rate Limiter</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/System-Design/Design-a-Rate-Limiter</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/System-Design/Design-a-Rate-Limiter</guid>
    <description>Rate Limiter In web services, rate limiters are used to control the client traffic by limiting the number of requests allowed within a certain time window.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>Estimation</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/System-Design/Estimation</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/System-Design/Estimation</guid>
    <description>Back of the Envelope Estimation Rounding and approximation What are your assumptions? What is the unit? Common estimations: QPS, peak QPS, storage, cache .</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>Interview</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/System-Design/Interview</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/System-Design/Interview</guid>
    <description>Interview Goals To understand candidate’s ability to collaborate, to work under pressure, to solve problems, and to communicate — asking good question.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>Scaling</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/System-Design/Scaling</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/System-Design/Scaling</guid>
    <description>Scaling a Web Service Terminology Client: web browsers or mobile applications. Server: machines that host back-end code, not necessarily where data live.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>202205202200 Diminishing Marginal Utility</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/Permanent-Notes/202205202200-Diminishing-Marginal-Utility</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/Permanent-Notes/202205202200-Diminishing-Marginal-Utility</guid>
    <description>Definition Each additional unit of consumption brings less satisfaction than previous unit. References: Spending Diminishing Marginal Utility - an overview | ScienceDirect Topics.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>202205231928 Cost Equivalent Curve</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/Permanent-Notes/202205231928-Cost-Equivalent-Curve</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/Permanent-Notes/202205231928-Cost-Equivalent-Curve</guid>
    <description>Definitions Cost: the number of training examples in the training set used. Performance: the performance given a model and a cost according to the task metric.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>202205231931 Transfer Learning Approaches</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/Permanent-Notes/202205231931-Transfer-Learning-Approaches</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/Permanent-Notes/202205231931-Transfer-Learning-Approaches</guid>
    <description>Multitask Training: Train the model on all tasks/datasets all at once; Sequential Multitask Training: Train the model on some tasks/datasets first before continue training it with the target tasks/datasets; Multitask Training and Fine-tuning: Train the model on some tasks first and fine-tuning it with target tasks/datasets; Findings from @lourie_2021 that ^3f3b27 almost always outperform other methods.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item><item>
    <title>202205241111 Code Review Pyramid</title>
    <link>https://sleepless-in-debugging.statichost.eu/4archives/Permanent-Notes/202205241111-Code-Review-Pyramid</link>
    <guid>https://sleepless-in-debugging.statichost.eu/4archives/Permanent-Notes/202205241111-Code-Review-Pyramid</guid>
    <description> Style and most tests should be automated (in the commit hooks, CI tools or in a bash script) so you don’t have to write a PR comment about this. One should have a trace of written records regarding design decisions and implementation choices, ranging from technical specifications to your API documentations.</description>
    <pubDate>Sat, 02 Mar 2024 22:13:51 GMT</pubDate>
  </item>
    </channel>
  </rss>